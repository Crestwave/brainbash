#!/usr/bin/env bash
#set -x

program=$(<"${1:-/dev/stdin}")
program=${program//[^'><+-.,[]']}

for (( index = 0; index < ${#program}; index++ )); do
	case ${program:index:1} in
		'+')
			(( tape[ptr]++ ))
			;;
		'-')
			(( tape[ptr]-- ))
			;;
		'.')
			printf -v hex %x "${tape[ptr]}"
			printf %b "\x$hex"
			;;
		',')
			IFS= read -rn 1 input
			[[ $input == $'\04' ]] && exit
			printf -v 'tape[ptr]' %d "'$input"
			;;
		'>')
			(( ptr++ ))
			;;
		'<')
			(( ptr > 0 && ptr-- ))
			;;
		'[')
			if (( tape[ptr] )); then
				stack+=("$index")
			else
				for (( depth = 1; depth > 0 && ++index; )); do
					case ${program:index:1} in
						'[')
							(( depth++ ))
							;;
						']')
							(( depth-- ))
							;;
					esac

					(( index >= ${#program} )) && {
						printf "Error: Unmatched opening bracket\n"
						exit 1
					}
				done
			fi

			;;
		']')
			(( ${#stack[@]} == 0 )) && {
				printf "Error: Unmatched closing bracket\n"
				exit 1
			}

			(( tape[ptr] )) && (( index = stack[-1] - 1 ))
			unset 'stack[-1]'
			;;
	esac
done
