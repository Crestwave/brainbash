#!/usr/bin/env bash

die()
{
	printf '\e[31merror:\e[m %s\n' "$@" >&2
	exit 1
}

if (( $# )); then
	if [[ -e $1 ]]; then
		program=$(< "$1")
	else
		die "file $1 does not exist"
	fi
else
	mapfile -t
	program=${MAPFILE[*]}
fi

program=${program//[^'><+-.,[]']}
declare -A tape

for (( i = ptr = 0; i < ${#program}; ++i )); do
	case ${program:i:1} in
		'>')
			(( ++ptr ))
			;;
		'<')
			(( --ptr ))
			;;
		'+')
			(( ++tape['$ptr'] ))
			(( tape['$ptr'] > 255 )) && tape[$ptr]=0
			;;
		'-')
			(( --tape['$ptr'] ))
			(( tape['$ptr'] < 0 )) && tape[$ptr]=255
			;;
		'.')
			printf -v hex %x "${tape[$ptr]}"
			printf %b "\x$hex"
			;;
		',')
			[[ -z $input ]] && {
				mapfile -n 1
				input+=${MAPFILE[0]}
			}

			[[ ${MAPFILE[0]+x} ]] && {
				printf -v 'tape[$ptr]' %d "'${input::1}"
				input=${input#?}
			}
			;;
		'[')
			if (( tape['$ptr'] )); then
				stack+=("$i")
			else
				for (( depth = 1; depth > 0 && ++i; )); do
					case ${program:i:1} in
						'[') (( ++depth )) ;;
						']') (( --depth )) ;;
						'') die "unmatched [" ;;
					esac
				done
			fi
			;;
		']')
			(( _ = ${#stack[@]} )) || die "unmatched ]"

			(( tape['$ptr'] )) && (( i = stack[_-1] - 1 ))
			unset 'stack[_-1]'
			;;
	esac
done

(( ${#stack[@]} )) && die "unmatched ["
